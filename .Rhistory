#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
#setwd("~/Personal not your Shit/Projects/WSB Discord/WSBEvolutionCalc")
#data = readRDS('data/data.rds')
library(shiny)
library(plotly)
library(readxl)
# Load the data
data = read_xlsx('data/evolutionPayOffSheet.xlsx')
# Define UI for application to calculate a the yield and Income of the Animal Backyard
ui <- fluidPage(
tabsetPanel(
# UI for the first Panel
tabPanel('Yield Calculator',
br(),
br(),
sidebarLayout(
sidebarPanel(
shiny::fixedRow(
selectInput('storeType', 'Store or Daily Store?',
c("Evo Store" ='Price_in_Stores',
'Daily Shop' = 'DailyPrice'))),
shiny::fixedRow(
numericInput('Nbought', "Enter the number of animals already bought in the shop", 0),
style = "margin-bottom:-15px;"),
tags$small(em('*Only applicable for Evolution Store')),
br(),
br(),
shiny::fixedRow(
sliderInput('Nanimal', 'Number of Animals', min = 1, max = 10, value = 1),
sliderInput('Level', 'Enter the Level of the Animal', min = 1, max = 20, value = 2)),
),
mainPanel(
h3(textOutput('cost')),
h3(textOutput('yield')),
h3(textOutput('reqDays'))))),
# UI for the second panel
tabPanel('Income Calculator',
br(),
h3(textOutput('IncomeDay')),
h3(textOutput('IncomeMonth')),
h3(textOutput('IncomeYear')),
br(),
br(),
flowLayout(
sliderInput('Level1', 'Enter the number of the Animal in Level 1', min = 0, max = 6, value = 0),
sliderInput('Level2', 'Enter the number of the Animal in Level 2', min = 0, max = 6, value = 0),
sliderInput('Level3', 'Enter the number of the Animal in Level 3', min = 0, max = 6, value = 0),
sliderInput('Level4', 'Enter the number of the Animal in Level 4', min = 0, max = 6, value = 0),
sliderInput('Level5', 'Enter the number of the Animal in Level 5', min = 0, max = 6, value = 0),
sliderInput('Level6', 'Enter the number of the Animal in Level 6', min = 0, max = 6, value = 0),
sliderInput('Level7', 'Enter the number of the Animal in Level 7', min = 0, max = 6, value = 0),
sliderInput('Level8', 'Enter the number of the Animal in Level 8', min = 0, max = 6, value = 0),
sliderInput('Level9', 'Enter the number of the Animal in Level 9', min = 0, max = 6, value = 0),
sliderInput('Level10', 'Enter the number of the Animal in Level 10', min = 0, max = 6, value = 0),
sliderInput('Level11', 'Enter the number of the Animal in Level 11', min = 0, max = 6, value = 0),
sliderInput('Level12', 'Enter the number of the Animal in Level 12', min = 0, max = 6, value = 0),
sliderInput('Level13', 'Enter the number of the Animal in Level 13', min = 0, max = 6, value = 0),
sliderInput('Level14', 'Enter the number of the Animal in Level 14', min = 0, max = 6, value = 0),
sliderInput('Level15', 'Enter the number of the Animal in Level 15', min = 0, max = 6, value = 0),
sliderInput('Level16', 'Enter the number of the Animal in Level 16', min = 0, max = 6, value = 0),
sliderInput('Level17', 'Enter the number of the Animal in Level 17', min = 0, max = 6, value = 0),
sliderInput('Level18', 'Enter the number of the Animal in Level 18', min = 0, max = 6, value = 0),
sliderInput('Level19', 'Enter the number of the Animal in Level 19', min = 0, max = 6, value = 0),
sliderInput('Level20', 'Enter the number of the Animal in Level 20', min = 0, max = 6, value = 0)
),
),
# UI for the third panel
tabPanel('Shop Analysis',
br(),
br(),
plotlyOutput('PlotOfDays'),
br(),
flowLayout(
sliderInput('shop1', 'Enter the number of the Animal you have bought in Level 1', min = 0, max = 30, value = 0),
sliderInput('shop2', 'Enter the number of the Animal you have bought in Level 2', min = 0, max = 25, value = 0),
sliderInput('shop3', 'Enter the number of the Animal you have bought in Level 3', min = 0, max = 25, value = 0),
sliderInput('shop4', 'Enter the number of the Animal you have bought in Level 4', min = 0, max = 25, value = 0),
sliderInput('shop5', 'Enter the number of the Animal you have bought in Level 5', min = 0, max = 25, value = 0),
sliderInput('shop6', 'Enter the number of the Animal you have bought in Level 6', min = 0, max = 25, value = 0),
sliderInput('shop7', 'Enter the number of the Animal you have bought in Level 7', min = 0, max = 20, value = 0),
sliderInput('shop8', 'Enter the number of the Animal you have bought in Level 8', min = 0, max = 20, value = 0),
sliderInput('shop9', 'Enter the number of the Animal you have bought in Level 9', min = 0, max = 20, value = 0),
sliderInput('shop10', 'Enter the number of the Animal you have bought in Level 10', min = 0, max = 15, value = 0),
sliderInput('shop11', 'Enter the number of the Animal you have bought in Level 11', min = 0, max = 15, value = 0),
sliderInput('shop12', 'Enter the number of the Animal you have bought in Level 12', min = 0, max = 15, value = 0),
sliderInput('shop13', 'Enter the number of the Animal you have bought in Level 13', min = 0, max = 15, value = 0),
sliderInput('shop14', 'Enter the number of the Animal you have bought in Level 14', min = 0, max = 15, value = 0),
sliderInput('shop15', 'Enter the number of the Animal you have bought in Level 15', min = 0, max = 15, value = 0),
sliderInput('shop16', 'Enter the number of the Animal you have bought in Level 16', min = 0, max = 10, value = 0),
sliderInput('shop17', 'Enter the number of the Animal you have bought in Level 17', min = 0, max = 10, value = 0),
sliderInput('shop18', 'Enter the number of the Animal you have bought in Level 18', min = 0, max = 10, value = 0),
sliderInput('shop19', 'Enter the number of the Animal you have bought in Level 19', min = 0, max = 10, value = 0),
sliderInput('shop20', 'Enter the number of the Animal you have bought in Level 20', min = 0, max = 10, value = 0)
)
)
))
# Define server logic required to run the application
server <- function(input, output) {
## calculating the cost
output$cost <- renderText({
num = as.numeric(input$Level)
shop = input$storeType
n = as.numeric(input$Nanimal)
m = as.numeric(input$Nbought)
if(shop == 'DailyPrice'){
prices = (data[num,shop])*n
}
else{
price = c()
for(i in 1:n){
price[i] = data[num,shop]+(300*(i-1+m))
}
prices = sum(unlist(price))
}
paste0("The Price of animals of would be ",format(prices, big.mark = ',', trim = T))
}
)
## calculating the yield of the animal
output$yield <- renderText({
num = as.numeric(input$Level)
shop = input$storeType
n = as.numeric(input$Nanimal)
m = as.numeric(input$Nbought)
income = (data$Expected_Income_Per_Hour[num]*n)
if(shop == 'DailyPrice'){
prices = (data[num,shop])*n
}
else{
price = c()
for(i in 1:n){
price[i] = data[num,shop]+(300*(i-1+m))
}
prices = sum(unlist(price))
}
yield =  ((((income*24*365) - prices)/prices)*100)
yield = round(yield,2)
paste0("The Yield of the animal for a year is ",yield, '%')})
# calculating the days required to get back the investment
output$reqDays <- renderText({
num = as.numeric(input$Level)
shop = input$storeType
n = as.numeric(input$Nanimal)
m = as.numeric(input$Nbought)
income = (data$Expected_Income_Per_Hour[num]*n)
if(shop == 'DailyPrice'){
prices = (data[num,shop])*n
}
else{
price = c()
for(i in 1:n){
price[i] = data[num,shop]+(300*(i-1+m))
}
prices = sum(unlist(price))
}
reqDays = prices/(income*24)
reqDays = round(reqDays, 0)
paste0("Days required to get back the investment ",reqDays, ' Days')
})
# Calculating the Income for a Day
output$IncomeDay <- renderText({
j = c()
income = c()
for(i in 1:20){
j[i] = paste0('Level',i)
income[i] = input[[j[i]]]*data$Expected_Income_Per_Hour[i]
}
income = sum(income)
sumincome = round(income, 2)
paste0("The Total Expected Income for an hour is ",format(sumincome, big.mark = ',', trim = T), ' Coins')
})
output$IncomeMonth <- renderText({
j = c()
income = c()
for(i in 1:20){
j[i] = paste0('Level',i)
income[i] = input[[j[i]]]*data$Expected_Income_Per_Hour[i]
}
income = sum(income)
sumincome = round(income*24, 2)
paste0("The Total Expected Income for a day is ",format(sumincome, big.mark = ',', trim = T), ' Coins')
})
output$IncomeYear <- renderText({
j = c()
income = c()
for(i in 1:20){
j[i] = paste0('Level',i)
income[i] = input[[j[i]]]*data$Expected_Income_Per_Hour[i]
}
income = sum(income)
sumincome = round(income*24*365, 2)
paste0("The Total Expected Income for a year is ",format(sumincome, big.mark = ',', trim = T), ' Coins')
})
# Calculating the number of days required to get back the investment
output$PlotOfDays <- renderPlotly({
data$ShopPrice <- c(ifelse(input$shop1 ==0, 0,((input$shop1)*300)+
data$Price_in_Stores[1]),
ifelse(input$shop2 ==0,0,((input$shop2)*300)+
data$Price_in_Stores[2]),
ifelse(input$shop3 ==0,0,((input$shop3)*300)+
data$Price_in_Stores[3]),
ifelse(input$shop4 ==0,0,((input$shop4)*300)+
data$Price_in_Stores[4]),
ifelse(input$shop5 ==0,0,((input$shop5)*300)+
data$Price_in_Stores[5]),
ifelse(input$shop6 ==0,0,((input$shop6)*300)+
data$Price_in_Stores[6]),
ifelse(input$shop7 ==0,0,((input$shop7)*300)+
data$Price_in_Stores[7]),
ifelse(input$shop8 ==0,0,((input$shop8)*300)+
data$Price_in_Stores[8]),
ifelse(input$shop9 ==0,0,((input$shop9)*300)+
data$Price_in_Stores[9]),
ifelse(input$shop10 ==0,0,((input$shop10)*300)+
data$Price_in_Stores[10]),
ifelse(input$shop11 ==0,0,((input$shop11)*300)+
data$Price_in_Stores[11]),
ifelse(input$shop12 ==0,0,((input$shop12)*300)+
data$Price_in_Stores[12]),
ifelse(input$shop13 ==0,0,((input$shop13)*300)+
data$Price_in_Stores[13]),
ifelse(input$shop14 ==0,0,((input$shop14)*300)+
data$Price_in_Stores[14]),
ifelse(input$shop15 ==0,0,((input$shop15)*300)+
data$Price_in_Stores[15]),
ifelse(input$shop16 ==0,0,((input$shop16)*300)+
data$Price_in_Stores[16]),
ifelse(input$shop17 ==0,0,((input$shop17)*300)+
data$Price_in_Stores[17]),
ifelse(input$shop18 ==0,0,((input$shop18)*300)+
data$Price_in_Stores[18]),
ifelse(input$shop19 ==0,0,((input$shop19)*300)+
data$Price_in_Stores[19]),
ifelse(input$shop20 ==0,0,((input$shop20)*300)+
data$Price_in_Stores[20])
)
data$ReqDay <- round((data$ShopPrice)/(data$Expected_Income_Per_Hour*24), 0)
plot_ly(data, x = ~factor(Level), y = ~ReqDay, type = "scatter",mode   = 'markers') %>%
layout(xaxis= list(title = 'Level'),
yaxis = list(title = "Days Required to get back the investment"))
})
}
View(server)
